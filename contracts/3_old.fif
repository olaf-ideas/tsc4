// automatically generated from `./contracts/3.fc` 
DECLPROC recv_internal
DECLPROC store_request
124428 DECLMETHOD find_and_replace
recv_internal PROC:<{
}>
store_request PROCINLINE:<{
  OVER
  BBITS
  SWAP
  ADD
  10 PUSHPOW2DEC
  GREATER
  IF:<{
    CONS
    NEWC
  }>
}>
find_and_replace PROCINLINE:<{
  s2 PUSH
  UBITSIZE
  s0 s3 XCHG
  NEWC
  s4 PUSH
  STUX
  ENDC
  CTOS
  NEWC
  s3 PUSH
  UBITSIZE
  s2 s4 XCHG
  STUX
  ENDC
  CTOS
  SWAP
  CTOS
  PUSHNULL
  NEWC
  s2 PUSH
  SBITS
  s1 s3 XCHG
  LDSLICEX
  UNTIL:<{
    WHILE:<{
      OVER
      SBITS
      s7 PUSH
      GEQ
    }>DO<{
      SWAP
      LDZEROES
      OVER
      0 GTINT
      IF:<{
        s3 s4 s3 XC2PU
        store_request INLINECALLDICT
        s0 s3 XCHG2
        STZEROES
      }>ELSE<{
        NIP
        s5 s0 PUSH2
        SDPFX
        IF:<{
          s6 PUSH
          SDSKIPFIRST
          s4 PUSH
          SBITS
          4 1 REVERSE
          store_request INLINECALLDICT
          s4 PUSH
          STSLICER
        }>ELSE<{
          1 PUSHINT
          SDSKIPFIRST
          s2 s3 XCHG2
          1 PUSHINT
          store_request INLINECALLDICT
          1 PUSHINT
          SWAP
          1 STU
        }>
        s1 s2 XCHG
      }>
      s3 s3 XCHG2
    }>
    FALSE
    UNTIL:<{
      OVER
      SBITS
      0 GTINT
      IF:<{
        NEWC
        s3 PUSH
        STSLICER
        10 PUSHPOW2DEC
        s0 s4 XCHG
        SBITS
        s1 s4 XCHG
        SUB
        s2 PUSH
        SBITS
        MIN
        s1 s2 XCHG
        LDSLICEX
        s3 s3 XCHG2
        STSLICER
        ENDC
        CTOS
      }>ELSE<{
        OVER
        SREFS
        0 GTINT
        IF:<{
          SWAP
          LDREF
          DROP
          CTOS
          NEWC
          s3 PUSH
          STSLICER
          OVER
          SBITS
          10 PUSHPOW2DEC
          s0 s5 XCHG
          SBITS
          s1 s5 XCHG
          SUB
          s1 s4 XCHG
          MIN
          LDSLICEX
          s3 s3 XCHG2
          STSLICER
          ENDC
          CTOS
        }>ELSE<{
          DROP
          TRUE
          ROT
        }>
      }>
      DUP
      SBITS
      s8 PUSH
      GEQ
      IF:<{
        TRUE
        s2 POP
      }>
      s2 s2 s0 XC2PU
    }>
    DROP
    OVER
    SBITS
    s7 PUSH
    LESS
  }>
  DROP
  3 3 BLKDROP2
  DUP
  SBITS
  s1 s3 XCHG
  store_request INLINECALLDICT
  ROT
  STSLICER
  ENDC
  WHILE:<{
    OVER
    ISNULL
    NOT
  }>DO<{
    SWAP
    UNCONS
    s1 s2 XCHG
    STREF
    ENDC
  }>
  NIP
}>
