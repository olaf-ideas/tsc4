{-
  TASK 5 - Fibonacci sequence
  Implement a function that generates the Fibonacci
  sequence from N to N+K terms (0<=N<=370; 0<=N+K<=371; 0<=K<=255).
  The first two terms of the Fibonacci sequence are F_0 = 0 and F_1 = 1,
  and the rest are defined as F_n = F_(n-1) + F_(n-2).
  The resulting Fibonacci sequence should be stored in a tuple.
  For example, a request with N = 1 and K = 3 should return a tuple [1, 1, 2],
  and a request with N = 201 and K = 4 should return a tuple
  [453973694165307953197296969697410619233826,
  734544867157818093234908902110449296423351,
  1188518561323126046432205871807859915657177,
  1923063428480944139667114773918309212080528]
-}

() recv_internal() {
}

(tuple) _fibonacci_sequence (int n, int k) asm """
// n, k
s0 PUSH
// n, k, k
0 EQINT
// n, k, k=0
IF:<{
  // n, k
  DROP2
  //
  NIL
}>ELSE<{
  // n, k
  s0 PUSH
  // n, k, k
  1 EQINT
  // n, k, k=1
  IF:<{
    // n, k
    DROP
    // n
s0 PUSH
184 PUSHINT
LEQ
IF:<{
s0 PUSH
92 LEQINT
IF:<{
s0 PUSH
46 LEQINT
IF:<{
s0 PUSH
23 LEQINT
IF:<{
s0 PUSH
11 LEQINT
IF:<{
0 SUBINT
1 PUSHINT
0 PUSHINT
}>ELSE<{
12 SUBINT
89 PUSHINT
144 PUSHINT
}>
}>ELSE<{
s0 PUSH
35 LEQINT
IF:<{
24 SUBINT
28657 PUSHINT
46368 PUSHINT
}>ELSE<{
36 SUBINT
9227465 PUSHINT
14930352 PUSHINT
}>
}>
}>ELSE<{
s0 PUSH
69 LEQINT
IF:<{
s0 PUSH
58 LEQINT
IF:<{
47 SUBINT
1836311903 PUSHINT
2971215073 PUSHINT
}>ELSE<{
59 SUBINT
591286729879 PUSHINT
956722026041 PUSHINT
}>
}>ELSE<{
s0 PUSH
81 LEQINT
IF:<{
70 SUBINT
117669030460994 PUSHINT
190392490709135 PUSHINT
}>ELSE<{
82 SUBINT
37889062373143906 PUSHINT
61305790721611591 PUSHINT
}>
}>
}>
}>ELSE<{
s0 PUSH
138 PUSHINT
LEQ
IF:<{
s0 PUSH
115 LEQINT
IF:<{
s0 PUSH
104 LEQINT
IF:<{
93 SUBINT
7540113804746346429 PUSHINT
12200160415121876738 PUSHINT
}>ELSE<{
105 SUBINT
2427893228399975082453 PUSHINT
3928413764606871165730 PUSHINT
}>
}>ELSE<{
s0 PUSH
127 LEQINT
IF:<{
116 SUBINT
483162952612010163284885 PUSHINT
781774079430987230203437 PUSHINT
}>ELSE<{
128 PUSHINT
SUB
155576970220531065681649693 PUSHINT
251728825683549488150424261 PUSHINT
}>
}>
}>ELSE<{
s0 PUSH
161 PUSHINT
LEQ
IF:<{
s0 PUSH
150 PUSHINT
LEQ
IF:<{
139 PUSHINT
SUB
30960598847965113057878492344 PUSHINT
50095301248058391139327916261 PUSHINT
}>ELSE<{
151 PUSHINT
SUB
9969216677189303386214405760200 PUSHINT
16130531424904581415797907386349 PUSHINT
}>
}>ELSE<{
s0 PUSH
173 PUSHINT
LEQ
IF:<{
162 PUSHINT
SUB
1983924214061919432247806074196061 PUSHINT
3210056809456107725247980776292056 PUSHINT
}>ELSE<{
174 PUSHINT
SUB
638817435613190341905763972389505493 PUSHINT
1033628323428189498226463595560281832 PUSHINT
}>
}>
}>
}>
}>ELSE<{
s0 PUSH
277 PUSHINT
LEQ
IF:<{
s0 PUSH
231 PUSHINT
LEQ
IF:<{
s0 PUSH
208 PUSHINT
LEQ
IF:<{
s0 PUSH
196 PUSHINT
LEQ
IF:<{
185 PUSHINT
SUB
127127879743834334146972278486287885163 PUSHINT
205697230343233228174223751303346572685 PUSHINT
}>ELSE<{
197 PUSHINT
SUB
40934782466626840596168752972961528246147 PUSHINT
66233869353085486281758142155705206899077 PUSHINT
}>
}>ELSE<{
s0 PUSH
220 PUSHINT
LEQ
IF:<{
209 PUSHINT
SUB
13180872826374098837632191485015125807374171 PUSHINT
21327100234463183349497947550385773274930109 PUSHINT
}>ELSE<{
221 PUSHINT
SUB
4244200115309993198876969489421897548446236915 PUSHINT
6867260041627791953052057353082063289320596021 PUSHINT
}>
}>
}>ELSE<{
s0 PUSH
254 PUSHINT
LEQ
IF:<{
s0 PUSH
243 PUSHINT
LEQ
IF:<{
232 PUSHINT
SUB
844617150046923109759866426342507997914076076194 PUSHINT
1366619256256991435939546543402365995473880912459 PUSHINT
}>ELSE<{
244 PUSHINT
SUB
271964099255182923543922814194423915162591622175362 PUSHINT
440047156314635932379335110006072428645041207574883 PUSHINT
}>
}>ELSE<{
s0 PUSH
266 PUSHINT
LEQ
IF:<{
255 PUSHINT
SUB
54122222371037658776676579571233761483351206693809497 PUSHINT
87571595343018854458033386304178158174356588264390370 PUSHINT
}>ELSE<{
267 PUSHINT
SUB
17427187520417066673081023209641459549125606105821258513 PUSHINT
28197781736352815952563206467131172508227658829511523778 PUSHINT
}>
}>
}>
}>ELSE<{
s0 PUSH
323 PUSHINT
LEQ
IF:<{
s0 PUSH
300 PUSHINT
LEQ
IF:<{
s0 PUSH
289 PUSHINT
LEQ
IF:<{
278 PUSHINT
SUB
3468097888158339286797581652104954628434169971646694834457 PUSHINT
5611500259351924431073312796924978741056961814867751431689 PUSHINT
}>ELSE<{
290 PUSHINT
SUB
1116716749392769314599541809794537900642843628817512046429889 PUSHINT
1806885656323799249738933639586633513160792578781310139745345 PUSHINT
}>
}>ELSE<{
s0 PUSH
312 PUSHINT
LEQ
IF:<{
301 PUSHINT
SUB
222232244629420445529739893461909967206666939096499764990979600 PUSHINT
359579325206583560961765665172189099052367214309267232255589801 PUSHINT
}>ELSE<{
313 PUSHINT
SUB
71558092601766452430641106302905217344934236440122960529002115744 PUSHINT
115783425999770513860373944643635095356961600163955231274253486033 PUSHINT
}>
}>
}>ELSE<{
s0 PUSH
346 PUSHINT
LEQ
IF:<{
s0 PUSH
335 PUSHINT
LEQ
IF:<{
324 PUSHINT
SUB
14240420007076730617258541919943310440740965418798778412503676622857 PUSHINT
23041483585524168262220906489642018075101617466780496790573690289968 PUSHINT
}>ELSE<{
336 PUSHINT
SUB
4585371016945309254695820765383405232040578837489482816555438621189665 PUSHINT
7419286156446180413982701248558426914965375890066879843604199271253952 PUSHINT
}>
}>ELSE<{
s0 PUSH
358 PUSHINT
LEQ
IF:<{
347 PUSHINT
SUB
912511873855702065852730553217787283194150290277873860991322859307033303 PUSHINT
1476475227036382503281437027911536541406625644706194668152438732346449273 PUSHINT
}>ELSE<{
359 PUSHINT
SUB
293825989466396564333419951255644330166833468672422805842178911936214659279 PUSHINT
475420437734698220747368027166749382927701417016557193662268716376935476241 PUSHINT
}>
}>
}>
}>
}>


    // n, f_-1, f_0
    ROT
    // f_-1, f_0, n
    REPEAT:<{
      // f_i-1, f_i
      TUCK 
      // f_i, f_i-1, f_i
      ADD
      // f_i, f_i+1
    }>
    SWAP
    // f_n, f_n-1
    DROP
    // f_n
    SINGLE
    // (f_n)
  }>ELSE<{
    SWAP // k, n

s0 PUSH
184 PUSHINT
LEQ
IF:<{
s0 PUSH
92 LEQINT
IF:<{
s0 PUSH
46 LEQINT
IF:<{
s0 PUSH
23 LEQINT
IF:<{
s0 PUSH
11 LEQINT
IF:<{
0 SUBINT
0 PUSHINT
1 PUSHINT
}>ELSE<{
12 SUBINT
144 PUSHINT
233 PUSHINT
}>
}>ELSE<{
s0 PUSH
35 LEQINT
IF:<{
24 SUBINT
46368 PUSHINT
75025 PUSHINT
}>ELSE<{
36 SUBINT
14930352 PUSHINT
24157817 PUSHINT
}>
}>
}>ELSE<{
s0 PUSH
69 LEQINT
IF:<{
s0 PUSH
58 LEQINT
IF:<{
47 SUBINT
2971215073 PUSHINT
4807526976 PUSHINT
}>ELSE<{
59 SUBINT
956722026041 PUSHINT
1548008755920 PUSHINT
}>
}>ELSE<{
s0 PUSH
81 LEQINT
IF:<{
70 SUBINT
190392490709135 PUSHINT
308061521170129 PUSHINT
}>ELSE<{
82 SUBINT
61305790721611591 PUSHINT
99194853094755497 PUSHINT
}>
}>
}>
}>ELSE<{
s0 PUSH
138 PUSHINT
LEQ
IF:<{
s0 PUSH
115 LEQINT
IF:<{
s0 PUSH
104 LEQINT
IF:<{
93 SUBINT
12200160415121876738 PUSHINT
19740274219868223167 PUSHINT
}>ELSE<{
105 SUBINT
3928413764606871165730 PUSHINT
6356306993006846248183 PUSHINT
}>
}>ELSE<{
s0 PUSH
127 LEQINT
IF:<{
116 SUBINT
781774079430987230203437 PUSHINT
1264937032042997393488322 PUSHINT
}>ELSE<{
128 PUSHINT
SUB
251728825683549488150424261 PUSHINT
407305795904080553832073954 PUSHINT
}>
}>
}>ELSE<{
s0 PUSH
161 PUSHINT
LEQ
IF:<{
s0 PUSH
150 PUSHINT
LEQ
IF:<{
139 PUSHINT
SUB
50095301248058391139327916261 PUSHINT
81055900096023504197206408605 PUSHINT
}>ELSE<{
151 PUSHINT
SUB
16130531424904581415797907386349 PUSHINT
26099748102093884802012313146549 PUSHINT
}>
}>ELSE<{
s0 PUSH
173 PUSHINT
LEQ
IF:<{
162 PUSHINT
SUB
3210056809456107725247980776292056 PUSHINT
5193981023518027157495786850488117 PUSHINT
}>ELSE<{
174 PUSHINT
SUB
1033628323428189498226463595560281832 PUSHINT
1672445759041379840132227567949787325 PUSHINT
}>
}>
}>
}>
}>ELSE<{
s0 PUSH
277 PUSHINT
LEQ
IF:<{
s0 PUSH
231 PUSHINT
LEQ
IF:<{
s0 PUSH
208 PUSHINT
LEQ
IF:<{
s0 PUSH
196 PUSHINT
LEQ
IF:<{
185 PUSHINT
SUB
205697230343233228174223751303346572685 PUSHINT
332825110087067562321196029789634457848 PUSHINT
}>ELSE<{
197 PUSHINT
SUB
66233869353085486281758142155705206899077 PUSHINT
107168651819712326877926895128666735145224 PUSHINT
}>
}>ELSE<{
s0 PUSH
220 PUSHINT
LEQ
IF:<{
209 PUSHINT
SUB
21327100234463183349497947550385773274930109 PUSHINT
34507973060837282187130139035400899082304280 PUSHINT
}>ELSE<{
221 PUSHINT
SUB
6867260041627791953052057353082063289320596021 PUSHINT
11111460156937785151929026842503960837766832936 PUSHINT
}>
}>
}>ELSE<{
s0 PUSH
254 PUSHINT
LEQ
IF:<{
s0 PUSH
243 PUSHINT
LEQ
IF:<{
232 PUSHINT
SUB
1366619256256991435939546543402365995473880912459 PUSHINT
2211236406303914545699412969744873993387956988653 PUSHINT
}>ELSE<{
244 PUSHINT
SUB
440047156314635932379335110006072428645041207574883 PUSHINT
712011255569818855923257924200496343807632829750245 PUSHINT
}>
}>ELSE<{
s0 PUSH
266 PUSHINT
LEQ
IF:<{
255 PUSHINT
SUB
87571595343018854458033386304178158174356588264390370 PUSHINT
141693817714056513234709965875411919657707794958199867 PUSHINT
}>ELSE<{
267 PUSHINT
SUB
28197781736352815952563206467131172508227658829511523778 PUSHINT
45624969256769882625644229676772632057353264935332782291 PUSHINT
}>
}>
}>
}>ELSE<{
s0 PUSH
323 PUSHINT
LEQ
IF:<{
s0 PUSH
300 PUSHINT
LEQ
IF:<{
s0 PUSH
289 PUSHINT
LEQ
IF:<{
278 PUSHINT
SUB
5611500259351924431073312796924978741056961814867751431689 PUSHINT
9079598147510263717870894449029933369491131786514446266146 PUSHINT
}>ELSE<{
290 PUSHINT
SUB
1806885656323799249738933639586633513160792578781310139745345 PUSHINT
2923602405716568564338475449381171413803636207598822186175234 PUSHINT
}>
}>ELSE<{
s0 PUSH
312 PUSHINT
LEQ
IF:<{
301 PUSHINT
SUB
359579325206583560961765665172189099052367214309267232255589801 PUSHINT
581811569836004006491505558634099066259034153405766997246569401 PUSHINT
}>ELSE<{
313 PUSHINT
SUB
115783425999770513860373944643635095356961600163955231274253486033 PUSHINT
187341518601536966291015050946540312701895836604078191803255601777 PUSHINT
}>
}>
}>ELSE<{
s0 PUSH
346 PUSHINT
LEQ
IF:<{
s0 PUSH
335 PUSHINT
LEQ
IF:<{
324 PUSHINT
SUB
23041483585524168262220906489642018075101617466780496790573690289968 PUSHINT
37281903592600898879479448409585328515842582885579275203077366912825 PUSHINT
}>ELSE<{
336 PUSHINT
SUB
7419286156446180413982701248558426914965375890066879843604199271253952 PUSHINT
12004657173391489668678522013941832147005954727556362660159637892443617 PUSHINT
}>
}>ELSE<{
s0 PUSH
358 PUSHINT
LEQ
IF:<{
347 PUSHINT
SUB
1476475227036382503281437027911536541406625644706194668152438732346449273 PUSHINT
2388987100892084569134167581129323824600775934984068529143761591653482576 PUSHINT
}>ELSE<{
359 PUSHINT
SUB
475420437734698220747368027166749382927701417016557193662268716376935476241 PUSHINT
769246427201094785080787978422393713094534885688979999504447628313150135520 PUSHINT
}>
}>
}>
}>
}>

    ROT // k, a, b, n
    REPEAT:<{ // k, a, b
      TUCK // k, b, a, b
      ADD // k, b, a + b
    }>
    // k, f_n, f_n + 1
    s2 PUSH
    // k, f_n, f_n + 1, k
    2 SUBCONST
    // k, f_n, f_n + 1, k - 2 remember to if 1
    REPEAT:<{
      // k, f_n, f_n + 1
      DUP2
      ADD
      s3 s2 XCHG
    }>
    // f_n, f_n + 1, ... f_n + k - 3, k, f_n + k - 2, f_n + k - 1
    ROT
    // f_n, f_n + 1, ... f_n + k - 3, f_n + k - 2, f_n + k - 1, k
    TUPLEVAR
    // (f_n, f_n + 1, ..., f_n + k - 1)
  }>
}>
""";

(tuple, ()) ~tpush(tuple t, int value) asm "TPUSH";
int last(tuple t) asm "LAST";
int tlen(tuple t) asm "TLEN";

;; testable
(tuple) fibonacci_sequence (int n, int k) inline method_id {
  if (k == 255) {
    tuple t = _fibonacci_sequence(n, k - 1);
    int a = t.at(252);
    int b = t.last();
    t~tpush(a + b);
    return t;
  }
  else {
    return _fibonacci_sequence(n, k);
  }
}