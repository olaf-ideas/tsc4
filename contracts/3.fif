"Asm.fif" include
// automatically generated from `./contracts/3.fc` 
PROGRAM{
  DECLPROC recv_internal
  124428 DECLMETHOD find_and_replace
  recv_internal PROC:<{
    // 
  }>
  find_and_replace PROCINLINE:<{
    //  flag value linked_list
    s2 PUSH	//  flag value linked_list flag
    UBITSIZE	//  flag value linked_list F
    s2 PUSH	//  flag value linked_list F value
    UBITSIZE	//  flag value linked_list F V
    s0 s4 XCHG
    NEWC
    s2 PUSH	//  V value linked_list F flag _8 F
    STUX	//  V value linked_list F _9
    ENDC	//  V value linked_list F _10
    CTOS	//  V value linked_list F df
    s0 s3 XCHG
    NEWC
    s5 PUSH	//  V df linked_list F value _13 V
    STUX	//  V df linked_list F _14
    ENDC	//  V df linked_list F _15
    CTOS	//  V df linked_list F dv
    s0 s2 XCHG	//  V df dv F linked_list
    CTOS	//  V df dv F ds
    DUP	//  V df dv F ds ds
    SBITS	//  V df dv F ds _21
    LDSLICEX	//  V df dv F w ds
    PUSHNULL	//  V df dv F w ds l
    NEWC	//  V df dv F w ds l b
    UNTIL:<{
      WHILE:<{
        s3 PUSH	//  V df dv F w ds l b w
        SBITS	//  V df dv F w ds l b _27
        s5 PUSH	//  V df dv F w ds l b _27 F
        GEQ	//  V df dv F w ds l b _28
      }>DO<{	//  V df dv F w ds l b
        s0 s3 XCHG	//  V df dv F b ds l w
        LDZEROES	//  V df dv F b ds l zeros w
        OVER	//  V df dv F b ds l zeros w zeros
        IF:<{	//  V df dv F b ds l zeros w
          s4 PUSH	//  V df dv F b ds l zeros w b
          BBITS	//  V df dv F b ds l zeros w _31
          s2 PUSH	//  V df dv F b ds l zeros w _31 zeros
          ADD	//  V df dv F b ds l zeros w _32
          10 PUSHPOW2DEC	//  V df dv F b ds l zeros w _32 _33=1023
          GREATER	//  V df dv F b ds l zeros w _34
          IF:<{	//  V df dv F b ds l zeros w
            s2 s4 XCHG2	//  V df dv F w ds zeros l b
            CONS	//  V df dv F w ds zeros l
            NEWC	//  V df dv F w ds zeros l b
            s2 s4 XCHG2	//  V df dv F b ds l zeros w
          }>	//  V df dv F b ds l zeros w
          s4 s4 XCHG2	//  V df dv F w ds l b zeros
          STZEROES	//  V df dv F w ds l b
        }>ELSE<{	//  V df dv F b ds l zeros w
          NIP	//  V df dv F b ds l w
          s6 s0 PUSH2	//  V df dv F b ds l w df w
          SDPFX	//  V df dv F b ds l w _39
          IF:<{	//  V df dv F b ds l w
            s4 PUSH	//  V df dv F b ds l w F
            SDSKIPFIRST	//  V df dv F b ds l w
            s3 PUSH	//  V df dv F b ds l w b
            BBITS	//  V df dv F b ds l w _42
            s8 PUSH	//  V df dv F b ds l w _42 V
            ADD	//  V df dv F b ds l w _43
            10 PUSHPOW2DEC	//  V df dv F b ds l w _43 _44=1023
            GREATER	//  V df dv F b ds l w _45
            IF:<{	//  V df dv F b ds l w
              s0 s3 XCHG	//  V df dv F w ds l b
              CONS	//  V df dv F w ds l
              NEWC	//  V df dv F w ds l b
              s0 s3 XCHG	//  V df dv F b ds l w
            }>	//  V df dv F b ds l w
            s3 s5 XCPU	//  V df dv F w ds l b dv
            STSLICER	//  V df dv F w ds l b
          }>ELSE<{	//  V df dv F b ds l w
            1 PUSHINT	//  V df dv F b ds l w _51=1
            SDSKIPFIRST	//  V df dv F b ds l w
            s3 PUSH	//  V df dv F b ds l w b
            BBITS	//  V df dv F b ds l w _53
            INC	//  V df dv F b ds l w _55
            10 PUSHPOW2DEC	//  V df dv F b ds l w _55 _56=1023
            GREATER	//  V df dv F b ds l w _57
            IF:<{	//  V df dv F b ds l w
              s0 s3 XCHG	//  V df dv F w ds l b
              CONS	//  V df dv F w ds l
              NEWC	//  V df dv F w ds l b
              s0 s3 XCHG	//  V df dv F b ds l w
            }>	//  V df dv F b ds l w
            1 PUSHINT	//  V df dv F b ds l w _61=1
            s0 s4 XCHG2	//  V df dv F w ds l _61=1 b
            1 STU	//  V df dv F w ds l b
          }>
        }>
      }>	//  V df dv F w ds l b
      FALSE	//  V df dv F w ds l b ok
      UNTIL:<{
        s3 PUSH	//  V df dv F w ds l b ok ds
        SBITS	//  V df dv F w ds l b ok _66
        IF:<{	//  V df dv F w ds l b ok
          NEWC	//  V df dv F w ds l b ok _67
          s5 PUSH	//  V df dv F w ds l b ok _67 w
          STSLICER	//  V df dv F w ds l b ok _68
          10 PUSHPOW2DEC	//  V df dv F w ds l b ok _68 _70=1023
          s0 s6 XCHG	//  V df dv F _70=1023 ds l b ok _68 w
          SBITS	//  V df dv F _70=1023 ds l b ok _68 _71
          s1 s6 XCHG	//  V df dv F _68 ds l b ok _70=1023 _71
          SUB	//  V df dv F _68 ds l b ok _72
          s4 PUSH	//  V df dv F _68 ds l b ok _72 ds
          SBITS	//  V df dv F _68 ds l b ok _72 _73
          MIN	//  V df dv F _68 ds l b ok _74
          s1 s4 XCHG	//  V df dv F _68 ok l b ds _74
          LDSLICEX	//  V df dv F _68 ok l b _69 ds
          s5 s5 XCHG2	//  V df dv F ds ok l b _68 _69
          STSLICER	//  V df dv F ds ok l b _76
          ENDC	//  V df dv F ds ok l b _77
          CTOS	//  V df dv F ds ok l b w
        }>ELSE<{	//  V df dv F w ds l b ok
          s3 PUSH	//  V df dv F w ds l b ok ds
          SREFS	//  V df dv F w ds l b ok _79
          IF:<{	//  V df dv F w ds l b ok
            s0 s3 XCHG	//  V df dv F w ok l b ds
            LDREF	//  V df dv F w ok l b _127 _126
            DROP	//  V df dv F w ok l b _81
            CTOS	//  V df dv F w ok l b next_ds
            NEWC	//  V df dv F w ok l b next_ds _84
            s5 PUSH	//  V df dv F w ok l b next_ds _84 w
            STSLICER	//  V df dv F w ok l b next_ds _85
            OVER	//  V df dv F w ok l b next_ds _85 next_ds
            SBITS	//  V df dv F w ok l b next_ds _85 _87
            10 PUSHPOW2DEC	//  V df dv F w ok l b next_ds _85 _87 _88=1023
            s0 s7 XCHG	//  V df dv F _88=1023 ok l b next_ds _85 _87 w
            SBITS	//  V df dv F _88=1023 ok l b next_ds _85 _87 _89
            s1 s7 XCHG	//  V df dv F _87 ok l b next_ds _85 _88=1023 _89
            SUB	//  V df dv F _87 ok l b next_ds _85 _90
            s1 s6 XCHG	//  V df dv F _85 ok l b next_ds _87 _90
            MIN	//  V df dv F _85 ok l b next_ds _91
            LDSLICEX	//  V df dv F _85 ok l b _86 next_ds
            s5 s5 XCHG2	//  V df dv F next_ds ok l b _85 _86
            STSLICER	//  V df dv F next_ds ok l b _93
            ENDC	//  V df dv F next_ds ok l b _94
            CTOS	//  V df dv F ds ok l b w
          }>ELSE<{	//  V df dv F w ds l b ok
            DROP	//  V df dv F w ds l b
            s2 s3 XCHG
            TRUE
            s0 s3 XCHG	//  V df dv F ds ok l b w
          }>
        }>
        DUP	//  V df dv F ds ok l b w w
        SBITS	//  V df dv F ds ok l b w _97
        10 PUSHPOW2DEC	//  V df dv F ds ok l b w _97 _98=1023
        EQUAL	//  V df dv F ds ok l b w _99
        IF:<{	//  V df dv F ds ok l b w
          TRUE
          s4 POP	//  V df dv F ds ok l b w
        }>	//  V df dv F ds ok l b w
        s0 s4 XCHG
        s3 s0 XCPU	//  V df dv F w ds l b ok ok
      }>	//  V df dv F w ds l b ok
      DROP	//  V df dv F w ds l b
      s3 PUSH	//  V df dv F w ds l b w
      SBITS	//  V df dv F w ds l b _101
      s5 PUSH	//  V df dv F w ds l b _101 F
      LESS	//  V df dv F w ds l b _102
    }>	//  V df dv F w ds l b
    s2 POP
    3 3 BLKDROP2
    s3 POP	//  l w b
    DUP	//  l w b b
    BBITS	//  l w b _103
    s2 PUSH	//  l w b _103 w
    SBITS	//  l w b _103 _104
    ADD	//  l w b _105
    10 PUSHPOW2DEC	//  l w b _105 _106=1023
    GREATER	//  l w b _107
    IF:<{	//  l w b
      s1 s2 XCHG	//  w l b
      CONS	//  w l
      SWAP
      NEWC	//  l w b
    }>	//  l w b
    SWAP	//  l b w
    STSLICER	//  l _112
    ENDC	//  l result
    OVER	//  l result l
    ISNULL	//  l result _114
    IFNOT:<{	//  l result
      UNTIL:<{
        SWAP	//  result l
        UNCONS	//  result l _115
        s1 s2 XCHG	//  l result _115
        STREF	//  l _117
        ENDC	//  l result
        OVER	//  l result l
        ISNULL	//  l result _119
      }>	//  l result
      NIP	//  result
    }>ELSE<{
      NIP	//  result
    }>
  }>
}END>c
