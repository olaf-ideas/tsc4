// automatically generated from `./contracts/3.fc` 
PROGRAM{
  DECLPROC recv_internal
  DECLPROC store_request
  124428 DECLMETHOD find_and_replace
  recv_internal PROC:<{
    // 
  }>
  store_request PROCINLINE:<{
    //  list b bits
    OVER	//  list b bits b
    BBITS	//  list b bits _3
    SWAP	//  list b _3 bits
    ADD	//  list b _4
    10 PUSHPOW2DEC	//  list b _4 _5=1023
    GREATER	//  list b _6
    IF:<{	//  list b
      CONS	//  list
      NEWC	//  list b
    }>	//  list b
  }>
  find_and_replace PROCINLINE:<{
    //  flag value linked_list
    s2 PUSH	//  flag value linked_list flag
    UBITSIZE	//  flag value linked_list F
    s2 PUSH	//  flag value linked_list F value
    UBITSIZE	//  flag value linked_list F V
    s0 s4 XCHG
    NEWC
    s2 PUSH	//  V value linked_list F flag _8 F
    STUX	//  V value linked_list F _9
    ENDC	//  V value linked_list F _10
    CTOS	//  V value linked_list F df
    s0 s3 XCHG
    NEWC
    s5 PUSH	//  V df linked_list F value _13 V
    STUX	//  V df linked_list F _14
    ENDC	//  V df linked_list F _15
    CTOS	//  V df linked_list F dv
    s0 s2 XCHG	//  V df dv F linked_list
    CTOS	//  V df dv F ds
    DUP	//  V df dv F ds ds
    SBITS	//  V df dv F ds _21
    LDSLICEX	//  V df dv F w ds
    PUSHNULL	//  V df dv F w ds l
    NEWC	//  V df dv F w ds l b
    UNTIL:<{
      WHILE:<{
        s3 PUSH	//  V df dv F w ds l b w
        SBITS	//  V df dv F w ds l b _27
        s5 PUSH	//  V df dv F w ds l b _27 F
        GEQ	//  V df dv F w ds l b _28
      }>DO<{	//  V df dv F w ds l b
        s0 s3 XCHG	//  V df dv F b ds l w
        LDZEROES	//  V df dv F b ds l zeros w
        OVER	//  V df dv F b ds l zeros w zeros
        IF:<{	//  V df dv F b ds l zeros w
          s2 s4 s2 XC2PU	//  V df dv F w ds zeros l b zeros
          store_request INLINECALLDICT	//  V df dv F w ds zeros l b
          ROT	//  V df dv F w ds l b zeros
          STZEROES	//  V df dv F w ds l b
        }>ELSE<{	//  V df dv F b ds l zeros w
          NIP	//  V df dv F b ds l w
          s6 s0 PUSH2	//  V df dv F b ds l w df w
          SDPFX	//  V df dv F b ds l w _33
          IF:<{	//  V df dv F b ds l w
            s4 PUSH	//  V df dv F b ds l w F
            SDSKIPFIRST	//  V df dv F b ds l w
            s3 s7 XCPU	//  V df dv F w ds l b V
            store_request INLINECALLDICT	//  V df dv F w ds l b
            s5 PUSH	//  V df dv F w ds l b dv
            STSLICER	//  V df dv F w ds l b
          }>ELSE<{	//  V df dv F b ds l w
            1 PUSHINT	//  V df dv F b ds l w _39=1
            SDSKIPFIRST	//  V df dv F b ds l w
            s0 s3 XCHG
            1 PUSHINT	//  V df dv F w ds l b _41=1
            store_request INLINECALLDICT	//  V df dv F w ds l b
            1 PUSHINT	//  V df dv F w ds l b _43=1
            SWAP	//  V df dv F w ds l _43=1 b
            1 STU	//  V df dv F w ds l b
          }>
        }>
      }>	//  V df dv F w ds l b
      FALSE	//  V df dv F w ds l b ok
      UNTIL:<{
        s3 PUSH	//  V df dv F w ds l b ok ds
        SBITS	//  V df dv F w ds l b ok _48
        IF:<{	//  V df dv F w ds l b ok
          NEWC	//  V df dv F w ds l b ok _49
          s5 PUSH	//  V df dv F w ds l b ok _49 w
          STSLICER	//  V df dv F w ds l b ok _50
          10 PUSHPOW2DEC	//  V df dv F w ds l b ok _50 _52=1023
          s0 s6 XCHG	//  V df dv F _52=1023 ds l b ok _50 w
          SBITS	//  V df dv F _52=1023 ds l b ok _50 _53
          s1 s6 XCHG	//  V df dv F _50 ds l b ok _52=1023 _53
          SUB	//  V df dv F _50 ds l b ok _54
          s4 PUSH	//  V df dv F _50 ds l b ok _54 ds
          SBITS	//  V df dv F _50 ds l b ok _54 _55
          MIN	//  V df dv F _50 ds l b ok _56
          s1 s4 XCHG	//  V df dv F _50 ok l b ds _56
          LDSLICEX	//  V df dv F _50 ok l b _51 ds
          s5 s5 XCHG2	//  V df dv F ds ok l b _50 _51
          STSLICER	//  V df dv F ds ok l b _58
          ENDC	//  V df dv F ds ok l b _59
          CTOS	//  V df dv F ds ok l b w
        }>ELSE<{	//  V df dv F w ds l b ok
          s3 PUSH	//  V df dv F w ds l b ok ds
          SREFS	//  V df dv F w ds l b ok _61
          IF:<{	//  V df dv F w ds l b ok
            s0 s3 XCHG	//  V df dv F w ok l b ds
            LDREF	//  V df dv F w ok l b _108 _107
            DROP	//  V df dv F w ok l b _63
            CTOS	//  V df dv F w ok l b next_ds
            NEWC	//  V df dv F w ok l b next_ds _66
            s5 PUSH	//  V df dv F w ok l b next_ds _66 w
            STSLICER	//  V df dv F w ok l b next_ds _67
            OVER	//  V df dv F w ok l b next_ds _67 next_ds
            SBITS	//  V df dv F w ok l b next_ds _67 _69
            10 PUSHPOW2DEC	//  V df dv F w ok l b next_ds _67 _69 _70=1023
            s0 s7 XCHG	//  V df dv F _70=1023 ok l b next_ds _67 _69 w
            SBITS	//  V df dv F _70=1023 ok l b next_ds _67 _69 _71
            s1 s7 XCHG	//  V df dv F _69 ok l b next_ds _67 _70=1023 _71
            SUB	//  V df dv F _69 ok l b next_ds _67 _72
            s1 s6 XCHG	//  V df dv F _67 ok l b next_ds _69 _72
            MIN	//  V df dv F _67 ok l b next_ds _73
            LDSLICEX	//  V df dv F _67 ok l b _68 next_ds
            s5 s5 XCHG2	//  V df dv F next_ds ok l b _67 _68
            STSLICER	//  V df dv F next_ds ok l b _75
            ENDC	//  V df dv F next_ds ok l b _76
            CTOS	//  V df dv F ds ok l b w
          }>ELSE<{	//  V df dv F w ds l b ok
            DROP	//  V df dv F w ds l b
            s2 s3 XCHG
            TRUE
            s0 s3 XCHG	//  V df dv F ds ok l b w
          }>
        }>
        DUP	//  V df dv F ds ok l b w w
        SBITS	//  V df dv F ds ok l b w _79
        s6 PUSH	//  V df dv F ds ok l b w _79 F
        GEQ	//  V df dv F ds ok l b w _80
        IF:<{	//  V df dv F ds ok l b w
          TRUE
          s4 POP	//  V df dv F ds ok l b w
        }>	//  V df dv F ds ok l b w
        s0 s4 XCHG
        s3 s0 XCPU	//  V df dv F w ds l b ok ok
      }>	//  V df dv F w ds l b ok
      DROP	//  V df dv F w ds l b
      s3 PUSH	//  V df dv F w ds l b w
      SBITS	//  V df dv F w ds l b _82
      s5 PUSH	//  V df dv F w ds l b _82 F
      LESS	//  V df dv F w ds l b _83
    }>	//  V df dv F w ds l b
    s2 POP
    3 3 BLKDROP2
    s3 POP	//  l w b
    OVER	//  l w b w
    SBITS	//  l w b _84
    s2 s3 XCHG	//  w l b _84
    store_request INLINECALLDICT	//  w l b
    ROT	//  l b w
    STSLICER	//  l _87
    ENDC	//  l result
    OVER	//  l result l
    ISNULL	//  l result _89
    IFNOT:<{	//  l result
      UNTIL:<{
        SWAP	//  result l
        UNCONS	//  result l _90
        s1 s2 XCHG	//  l result _90
        STREF	//  l _92
        ENDC	//  l result
        OVER	//  l result l
        ISNULL	//  l result _94
      }>	//  l result
      NIP	//  result
    }>ELSE<{
      NIP	//  result
    }>
  }>
}END>c
